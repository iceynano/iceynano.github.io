(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{347:function(e,t,a){e.exports=a.p+"assets/img/avd01.c3bca6a3.png"},348:function(e,t,a){e.exports=a.p+"assets/img/avd02.f56abb6d.png"},349:function(e,t,a){e.exports=a.p+"assets/img/avd03.f5fb1ffb.png"},350:function(e,t,a){e.exports=a.p+"assets/img/avd04.9fd7c658.png"},351:function(e,t,a){e.exports=a.p+"assets/img/avd05.34a9e516.png"},352:function(e,t,a){e.exports=a.p+"assets/img/avd06.fe29dc5b.png"},353:function(e,t,a){e.exports=a.p+"assets/img/avd07.9174d79c.png"},406:function(e,t,a){"use strict";a.r(t);var o=a(10),n=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"installation-instructions-for-linux-w-podman"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installation-instructions-for-linux-w-podman"}},[e._v("#")]),e._v(" Installation instructions for Linux w/ Podman")]),e._v(" "),t("p",[e._v("Because installing a specific version of python in Linux can be tricky, and\n"),t("code",[e._v("conda")]),e._v(" can pollute your environment, this method uses "),t("s",[e._v("Docker")]),e._v(" Podman to build a container for ALAS.")]),e._v(" "),t("p",[t("code",[e._v("Podman")]),e._v(" is used in place of "),t("code",[e._v("Docker")]),e._v(" due to mount permission/UID-GID, also with the perks of being daemon-less replacement, which means you can run containers without running as root/sudo. This will reduce attack surface in case of users wanting use remote control the ALAS deployment via SSH method or reverse proxy (e.g. Nginx).")]),e._v(" "),t("p",[e._v("Because Podman also runs on Mac OS and Windows, this method may also work in those platforms, although your mileage may vary (see Detailed usage).")]),e._v(" "),t("h2",{attrs:{id:"disclaimer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#disclaimer"}},[e._v("#")]),e._v(" Disclaimer")]),e._v(" "),t("p",[e._v("This method doesn't provide a one-click solution as the EasyInstaller with 1:1\nfeature parity, as this would require a larger codebase for a close-to-zero userbase. If you encounter any problems, file a GitHub issue and ping @viperML or @n0k0m3")]),e._v(" "),t("h2",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Some basic knowledge of the terminal and "),t("code",[e._v("podman")])])]),e._v(" "),t("li",[t("p",[e._v("Android emulator, such as:")]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.genymotion.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Genymotion"),t("OutboundLink")],1),e._v(" "),t("strong",[e._v("(recommended)")])]),t("details",[t("summary",[e._v("Installation guide")]),t("p"),e._v(" "),t("ul",[t("li",[e._v("Download and install Genymotion from "),t("a",{attrs:{href:"https://www.genymotion.com/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(", or from AUR if you are using Arch Linux.")]),e._v(" "),t("li",[e._v('Create a new virtual device (red plus button on top right or Ctrl-N), and select "Custom Tablet", click Next. Config your device as follow\n'),t("ul",[t("li",[e._v("Display: Custom (1280x720 - 160 MDPI)")]),e._v(" "),t("li",[e._v("Android Version: 7.1 (must be 9 or lower, 5.1 doesn't work for me)\n"),t("ul",[t("li",[e._v("Pros: Android 5-9 supports "),t("code",[e._v("ascreencap")]),e._v(" method to capture the screen, which is the fastest method at the moment")])])]),e._v(" "),t("li",[e._v("Processors: 4, Memory: 4096 (modify this as you need less or more)")]),e._v(" "),t("li",[e._v("Leave the rest as default")]),e._v(" "),t("li",[e._v("Hit Install")])])]),e._v(" "),t("li",[e._v("To install Azur Lane, you MUST install the ARM translation layer ("),t("code",[e._v("libhoudini")]),e._v(") from this repo: https://github.com/m9rco/Genymotion_ARM_Translation\n"),t("ul",[t("li",[e._v("Only supports up to Android 9")]),e._v(" "),t("li",[e._v("Read "),t("a",{attrs:{href:"https://github.com/m9rco/Genymotion_ARM_Translation/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("README.md"),t("OutboundLink")],1),e._v(" for which file to download")]),e._v(" "),t("li",[e._v("For Android 7.1 download "),t("a",{attrs:{href:"https://github.com/m9rco/Genymotion_ARM_Translation/blob/master/package/Genymotion-ARM-Translation_for_7.X.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v('Drag the downloaded ZIP file to emulator, click "OK" when it asks you to flash.')]),e._v(" "),t("li",[e._v("Restart the emulator.")])])]),e._v(" "),t("li",[e._v('(Optional) If you have to install Google Play to install Azur Lane (or you can just sideload the apk and obb from APKPure), click on the down arrow on bottom right of the emulator control panel, select "Install Open GApps" and follow the instructions. The emulator will restart and you can install the game.')]),e._v(" "),t("li",[e._v("Enable debugging mode")]),e._v(" "),t("li",[e._v("To know the emulator name for alas, type in terminal "),t("code",[e._v("adb devices")]),e._v(", and the name will show up in the list.")]),e._v(" "),t("li",[e._v("Genymotion doesn't have "),t("code",[e._v("netcat")]),e._v(" or "),t("code",[e._v("nc")]),e._v(" installed by default, so you need to install "),t("code",[e._v("busybox")]),e._v(" for it.")])])])]),e._v(" "),t("li",[t("p",[e._v("Android's studio AVD (not recommended due to less smooth and memory leak)\n")]),t("details",[t("summary",[e._v("Installation guide")]),t("p"),e._v(" "),t("ul",[t("li",[e._v("Install Android Studio (through your distribution's package manager)")]),e._v(" "),t("li",[e._v('After the first launch and setup, select the "SDK Manager"\n'),t("img",{attrs:{src:a(347),alt:""}})]),e._v(" "),t("li",[e._v('Now, to download an emulator for Android 11, you have to select "Show Package Details", and then select the "System Image Atom_64", "Google APIs Atom_64" and "Google Play Atom_64" packages, as shown in the image. Only Android >= 11 supports ARM translation layer ('),t("a",{attrs:{href:"https://android-developers.googleblog.com/2020/03/run-arm-apps-on-android-emulator.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("source"),t("OutboundLink")],1),e._v("), and Android 12 was recently released (may have bugs). Coming from the future, feel free to experiment with newer Android versions.\n"),t("img",{attrs:{src:a(348),alt:""}})]),e._v(" "),t("li",[e._v("After that installation is done, go back to the AVD manager\n"),t("img",{attrs:{src:a(349),alt:""}})]),e._v(" "),t("li",[e._v("Start creating a new  Virtual Device, first by creating a Hardware Profile with "),t("code",[e._v("1280x720")]),e._v(" screen resolution and enough RAM.\n"),t("img",{attrs:{src:a(350),alt:""}})]),e._v(" "),t("li",[e._v("In the next section, select the system image that we downloaded earlier, under the tab "),t("code",[e._v("x86 Images")]),e._v(". Make sure to pick the one with \"Google APIs'.\n"),t("img",{attrs:{src:a(351),alt:""}})]),e._v(" "),t("li",[e._v("In the last configuration panel, make sure to enable enough storage to install Azur Lane, select the RAM and CPU cores and the device orientation to landscape.\n"),t("img",{attrs:{src:a(352),alt:""}})]),e._v(" "),t("li",[e._v("Finally, before launching the emulator, we have to enable the Play Store to install the game. Edit the file under "),t("code",[e._v("/home/<your user>/.android/avd/<AVD name>.avd/config.ini")]),e._v(" and change the values:\n"),t("ul",[t("li",[t("code",[e._v("PlayStore.enable=false")]),e._v(" > "),t("code",[e._v("PlayStore.enable=true")])]),e._v(" "),t("li",[t("code",[e._v("image.sysdir.1=system-images/android-<your version>/google_apis/x86_64/")]),e._v(" > "),t("code",[e._v("image.sysdir.1=system-images/android-<your version>/google_apis_playstore/x86/")]),e._v(" "),t("img",{attrs:{src:a(353),alt:""}})])])]),e._v(" "),t("li",[e._v("Close Android Studio, start it again and launch your emulator.")]),e._v(" "),t("li",[e._v("(VERY IMPORTANT) AVD will lock adb auth to the first adb instance connected. To avoid this, go to emulator's Extended Control (3 dots) -> Settings -> (Turn off) Use detected ADB location and leave the field empty")]),e._v(" "),t("li",[e._v("To enable emulator's developer option when "),t("code",[e._v("Build Number")]),e._v(" is disabled, enter "),t("code",[e._v("adb shell")]),e._v(" and use "),t("code",[e._v("settings put global development_settings_enabled 1")])]),e._v(" "),t("li",[e._v("To know the emulator name for alas, type in a terminal "),t("code",[e._v("adb devices")]),e._v(", and the name show pup up in the list.")])])])])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://podman.io/getting-started/installation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Podman"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/containers/podman-compose",target:"_blank",rel:"noopener noreferrer"}},[e._v("Podman Compose"),t("OutboundLink")],1),e._v(". Don't install using "),t("code",[e._v("pip")]),e._v(".")])]),e._v(" "),t("li",[t("p",[e._v("Git")])]),e._v(" "),t("li",[t("p",[e._v("Bash")])])]),e._v(" "),t("h2",{attrs:{id:"installation-and-usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installation-and-usage"}},[e._v("#")]),e._v(" Installation and usage")]),e._v(" "),t("p",[e._v("First, clone this repository into any folder (e.g. at your home directory):")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/LmeSzinc/AzurLaneAutoScript\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" AzurLaneAutoScript\n")])])]),t("p",[e._v("Refer to "),t("code",[e._v("config/deploy.template-docker.yaml")]),e._v(" to update "),t("code",[e._v("config/deploy.yaml")]),e._v(". "),t("strong",[e._v("Note for CN players deployment")]),e._v(": edit "),t("code",[e._v("docker-compose.yml")]),e._v(" to use "),t("code",[e._v("Dockerfile.cn")]),e._v(" to build image, and use "),t("code",[e._v("config/deploy.template-docker-cn.yaml")]),e._v(" instead.")]),e._v(" "),t("p",[e._v("Run the following command")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("podman-compose")]),e._v(" up\n")])])]),t("p",[e._v("Shortly after, you should see the IP address to access the GUI in your web browser. Continue to the "),t("RouterLink",{attrs:{to:"/guide/installation.html#enter-alas"}},[e._v("standard installation guide")]),e._v(".")],1),e._v(" "),t("p",[e._v("If you get any problem with "),t("code",[e._v("podman")]),e._v(" regarding to "),t("code",[e._v('Error: error creating build container: short-name "<mambaforge container>" did not resolve to an alias and no unqualified-search registries are defined in "/etc/containers/registries.conf"')]),e._v(", use this solution: https://github.com/containers/podman/issues/9390#issuecomment-970305169")]),e._v(" "),t("h2",{attrs:{id:"detailed-usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#detailed-usage"}},[e._v("#")]),e._v(" Detailed usage")]),e._v(" "),t("p",[e._v("The Dockerfile included in "),t("code",[e._v("deploy/docker")]),e._v(" pulls a base image with "),t("code",[e._v("mamba")]),e._v(" ("),t("code",[e._v("conda")]),e._v(" alternative), and installs the required dependencies into the image. Then, the ALAS folder is mounted into the container and the python entrypoint is run inside.")]),e._v(" "),t("blockquote",[t("p",[e._v("The "),t("code",[e._v("network_mode: host")]),e._v(" flag in "),t("code",[e._v("docker-compose.yml")]),e._v(" is important, it allows the bundled ADB in the container can access the emulator directly. Otherwise you would have to manually set up the port forwarding. It is also important to kill any adb servers running on the host machine ("),t("code",[e._v("adb kill-server")]),e._v(")")])]),e._v(" "),t("p",[e._v("Equivalent "),t("code",[e._v("podman run")]),e._v(" command:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("podman")]),e._v(" build "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" alas "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" deploy/docker/Dockerfile deploy/docker\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("podman")]),e._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--net")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("host "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-it")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-v")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.:/app/AzurLaneAutoScript:rw'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-v")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/etc/localtime:/etc/localtime:ro'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--name")]),e._v(" alas alas\n")])])]),t("h2",{attrs:{id:"uninstall"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uninstall"}},[e._v("#")]),e._v(" Uninstall")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("podman")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" alas\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("podman")]),e._v(" rmi alas\n")])])]),t("p",[e._v("And remove the "),t("code",[e._v("AzurLaneAutoScript")]),e._v(" folder.")])])}),[],!1,null,null,null);t.default=n.exports}}]);