(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{420:function(t,a,s){"use strict";s.r(a);var r=s(10),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_4-3-ocr-文字识别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-ocr-文字识别"}},[t._v("#")]),t._v(" 4.3. OCR 文字识别")]),t._v(" "),a("p",[t._v("这里介绍 OCR （光学字符识别）。")]),t._v(" "),a("p",[t._v("Alas 使用了 "),a("a",{attrs:{href:"https://github.com/breezedeus/cnocr",target:"_blank",rel:"noopener noreferrer"}},[t._v("cnocr"),a("OutboundLink")],1),t._v(" 作为 OCR 库，也针对碧蓝航线内的字体训练了两个 OCR 模型。许多脚本都迈不过 OCR 这道坎，需要依赖在线 OCR，但是在 Alas 里，你可以大量地调用 OCR。")]),t._v(" "),a("p",[t._v("需要注意的是 OCR 是无法达到 100% 正确率的，在调用时需要注意异常处理。")]),t._v(" "),a("h2",{attrs:{id:"预训练模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预训练模型"}},[t._v("#")]),t._v(" 预训练模型")]),t._v(" "),a("p",[t._v("Alas 里有 3 个 OCR 模型：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("cnocr")]),t._v("  是 cnocr 的默认模型，支持中英文")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Folder: ./bin/cnocr_models/cnocr\n# Size: 9.51MB\n# Model: densenet-lite-gru\n# Epoch: 39\n# Validation accuracy: 99.04%\n# Font: Various\n# Charset: Number, English character, Chinese character, symbols, <space>\n# _num_classes: 6426\n")])])]),a("ul",[a("li",[a("strong",[t._v("azur_lane")]),t._v(" 针对碧蓝航线数字和字母，仿照 cnocr 默认模型训练")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Folder: ./bin/cnocr_models/azur_lane\n# Size: 3.25MB\n# Model: densenet-lite-gru\n# Epoch: 15\n# Validation accuracy: 99.43%\n# Font: Impact, AgencyFB-Regular, MStiffHeiHK-UltraBold\n# Charset: 0123456789ABCDEFGHIJKLMNPQRSTUVWXYZ:/- (Letter 'O' and <space> is not included)\n# _num_classes: 39\n")])])]),a("ul",[a("li",[a("strong",[t._v("jp")]),t._v(" 针对日文，同样仿照 cnocr 默认模型训练")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("具体信息忘了（逃\n")])])]),a("h2",{attrs:{id:"对-cnocr-的修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对-cnocr-的修改"}},[t._v("#")]),t._v(" 对 cnocr 的修改")]),t._v(" "),a("p",[t._v("Alas 对 cnocr 进行了简单的修改，"),a("code",[t._v("module/ocr/al_ocr.py")]),t._v(" 覆写了一些 cnocr 的方法：")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("_assert_and_prepare_model_files")])]),t._v(" "),a("p",[t._v("取消了自动下载默认模型")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("_preprocess_img_array")])]),t._v(" "),a("p",[t._v("图片预处理改成纯 opencv 实现，提高速度")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("init")])]),t._v(" "),a("p",[t._v("模型懒加载")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("_gen_line_pred_chars")])]),t._v(" "),a("p",[t._v("去除了准确率在 0.5 以下的字符输出")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("debug")])]),t._v(" "),a("p",[t._v("增加了一个展示预处理后的图片的方法")])])]),t._v(" "),a("h2",{attrs:{id:"ocr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ocr"}},[t._v("#")]),t._v(" Ocr")]),t._v(" "),a("p",[t._v("通用的 OCR 类")]),t._v(" "),a("p",[t._v("以关卡名称 OCR 为例：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 Ocr 对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以是个 button，也可以是一个 list 的 button")]),t._v("\nocr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Ocr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buttons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'campaign'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" letter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" threshold"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          alphabet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0123456789ABCDEFGHIJKLMNPQRSTUVWXYZ-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取识别结果")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ocr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ocr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"digit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#digit"}},[t._v("#")]),t._v(" Digit")]),t._v(" "),a("p",[t._v("识别数字。返回 int")]),t._v(" "),a("p",[t._v("如果识别结果不能转换为 int，返回 "),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"digitcounter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#digitcounter"}},[t._v("#")]),t._v(" DigitCounter")]),t._v(" "),a("p",[t._v("识别数字计数，例如  "),a("code",[t._v("14/15")]),t._v("，返回 "),a("code",[t._v("(14, 1, 15)")]),t._v("。")]),t._v(" "),a("p",[t._v("如果识别结果不符合 "),a("code",[t._v("{x}/{y}")]),t._v(" 的格式，返回 "),a("code",[t._v("(0, 0, 0)")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"duration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#duration"}},[t._v("#")]),t._v(" Duration")]),t._v(" "),a("p",[t._v("识别时长，例如 "),a("code",[t._v("08:00:00")]),t._v("，返回 datetime.timedelta 对象。")]),t._v(" "),a("p",[t._v("如果识别结果不符合 "),a("code",[t._v("{h}:{m}:{s}")]),t._v(" 的格式，返回时长为 0 的 datetime.timedelta 对象。")])])}),[],!1,null,null,null);a.default=e.exports}}]);