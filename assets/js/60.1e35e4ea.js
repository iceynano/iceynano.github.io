(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{422:function(t,a,s){"use strict";s.r(a);var n=s(10),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_5-3-global-map-全局地图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-global-map-全局地图"}},[t._v("#")]),t._v(" 5.3. Global Map 全局地图")]),t._v(" "),a("p",[t._v("这里介绍 "),a("code",[t._v("module/map/map_base.py")]),t._v(" 内 "),a("code",[t._v("CampaignBase")]),t._v(" 全局地图（Global Map）.")]),t._v(" "),a("h2",{attrs:{id:"初始化全局地图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化全局地图"}},[t._v("#")]),t._v(" 初始化全局地图")]),t._v(" "),a("p",[t._v("每次进入地图都需要初始化，重置地图信息")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map_  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 来自地图文件的定义")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_map_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use_loop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_is_clear_mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_spawn_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use_loop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_is_clear_mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_mechanism"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("land_based"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MAP_HAS_LAND_BASED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("grid_connection_initial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    wall"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MAP_HAS_WALL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    portal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MAP_HAS_PORTAL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" update()")]),t._v(" "),a("p",[t._v("将局部地图合并至全局地图中，并检查属性是否正确，否则记为错误。若错误数量超过 2，不会合并，同时返回 False。")]),t._v(" "),a("p",[t._v("检查规则非常啰嗦，建议直接看 "),a("code",[t._v("module/map_detection/grid_info.py GridInfo.merge()")]),t._v("，大致规则是 "),a("code",[t._v("is_XXX")]),t._v(" 只能合并到 "),a("code",[t._v("may_XXX")]),t._v(" 的点上。比如局部地图中的 "),a("code",[t._v("is_enemy")]),t._v(" 只能合并在全局地图中 "),a("code",[t._v("may_enemy")]),t._v(" 的点上，否则记为错误。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("grids")]),t._v(" 局部地图，View 对象")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("camera")]),t._v(" 当前镜头对准的格子")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("mode")]),t._v(" 更新模式，一般是 "),a("code",[t._v("normal")])]),t._v(" "),a("p",[t._v("踩问号遇到运输船时，使用 "),a("code",[t._v("carrier")]),t._v("。运输船只会刷新在无刷新事件的点（"),a("code",[t._v("--")]),t._v("）")])])]),t._v(" "),a("h2",{attrs:{id:"grid-connection-initial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid-connection-initial"}},[t._v("#")]),t._v(" grid_connection_initial()")]),t._v(" "),a("p",[t._v("连接所有相邻的网格，用于寻路")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("wall")]),t._v(" 是否有墙的阻隔，有就引入 wall_data")]),t._v(" "),a("li",[a("strong",[t._v("portal")]),t._v(" 是否有传送门，有就引入 portal_data")])]),t._v(" "),a("h2",{attrs:{id:"show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show"}},[t._v("#")]),t._v(" show()")]),t._v(" "),a("p",[t._v("在 log 里展示当前地图的信息，例如")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("INFO |     A  B  C  D  E  F  G  H\nINFO |  1 -- ++ -- -- -- 3L -- --\nINFO |  2 MY ++ ++ MY -- -- 2M --\nINFO |  3 Fl -- FL -- -- -- == MY\nINFO |  4 -- 2L -- -- -- 2M ++ ++\nINFO |  5 -- -- -- 2L -- == ++ ++\n")])])]),a("h2",{attrs:{id:"show-cost"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-cost"}},[t._v("#")]),t._v(" show_cost()")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("INFO |       A    B    C    D    E    F    G    H\nINFO |  1    4 9999    4    3    4    5    8    7\nINFO |  2    3 9999 9999    2    3    4    5    6\nINFO |  3    2    1    0    1    2    3    4    5\nINFO |  4    3    2    1    2    3    4 9999 9999\nINFO |  5    4    3    2    3    4    5 9999 9999\n")])])]),a("h2",{attrs:{id:"show-connection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-connection"}},[t._v("#")]),t._v(" show_connection()")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("INFO |     A  B  C  D  E  F  G  H\nINFO |  1 A2    D1 D2 D1 E1 H1 H2\nINFO |  2 A3       D3 D2 E2 F2 H3\nINFO |  3 B3 C3    C3 D3 E3 F3 G3\nINFO |  4 A3 C4 C3 C4 D4 E4      \nINFO |  5 B5 C5 C4 C5 E4 E5      \n")])])]),a("h2",{attrs:{id:"reset-self"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-self"}},[t._v("#")]),t._v(" reset(self)")]),t._v(" "),a("p",[t._v("重置所有地图信息")]),t._v(" "),a("h2",{attrs:{id:"reset-fleet-self"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-fleet-self"}},[t._v("#")]),t._v(" reset_fleet(self)")]),t._v(" "),a("h3",{attrs:{id:"find-path-initial-self-location-has-ambush-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-path-initial-self-location-has-ambush-true"}},[t._v("#")]),t._v(" find_path_initial(self, location, has_ambush=True)")]),t._v(" "),a("h3",{attrs:{id:"find-path-initial-multi-fleet-self-location-dict-current-has-ambush"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-path-initial-multi-fleet-self-location-dict-current-has-ambush"}},[t._v("#")]),t._v(" find_path_initial_multi_fleet(self, location_dict, current, has_ambush)")]),t._v(" "),a("h3",{attrs:{id:"find-path-self-location-step-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-path-self-location-step-0"}},[t._v("#")]),t._v(" find_path(self, location, step=0)")]),t._v(" "),a("h3",{attrs:{id:"missing-get-self-battle-count-mystery-count-0-siren-count-0-carrier-count-0-mode-normal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#missing-get-self-battle-count-mystery-count-0-siren-count-0-carrier-count-0-mode-normal"}},[t._v("#")]),t._v(" missing_get(self, battle_count, mystery_count=0, siren_count=0, carrier_count=0, mode='normal')")]),t._v(" "),a("h3",{attrs:{id:"missing-is-none-self-battle-count-mystery-count-0-siren-count-0-carrier-count-0-mode-normal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#missing-is-none-self-battle-count-mystery-count-0-siren-count-0-carrier-count-0-mode-normal"}},[t._v("#")]),t._v(" missing_is_none(self, battle_count, mystery_count=0, siren_count=0, carrier_count=0, mode='normal')")]),t._v(" "),a("h3",{attrs:{id:"missing-predict-self-battle-count-mystery-count-0-siren-count-0-carrier-count-0-mode-normal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#missing-predict-self-battle-count-mystery-count-0-siren-count-0-carrier-count-0-mode-normal"}},[t._v("#")]),t._v(" missing_predict(self, battle_count, mystery_count=0, siren_count=0, carrier_count=0, mode='normal')")]),t._v(" "),a("h2",{attrs:{id:"select-self-kwargs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-self-kwargs"}},[t._v("#")]),t._v(" select(self, **kwargs)")])])}),[],!1,null,null,null);a.default=e.exports}}]);